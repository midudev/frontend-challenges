---
import Layout from '@layout'

const RANGECHARACTERS = [...Array(17).keys()].slice(8)
---

<Layout title='vab1997'>
	<wc-toast />
	<div class='flex items-center justify-center h-screen'>
		<div
			class='flex items-center justify-center flex-col p-6 max-w-lg w-full rounded-lg border shadow-md bg-gray-800 border-gray-700'
		>
			<h1 class='inline-flex gap-2 items-center font-medium text-white text-2xl'>
				Generador de contraseñas seguras
				<svg width='32' height='32' fill='none'>
					<path
						d='M3 13a3 3 0 0 1 3-3h2l1.5-1 1 1h7L19 9l1 1h2a3 3 0 0 1 3 3v13a3 3 0 0 1-3 3H6a3 3 0 0 1-3-3V13Z'
						fill='#F9C23C'></path>
					<path d='M15.5 19.5a2.5 2.5 0 1 0-3 0V23a1.5 1.5 0 0 0 3 0v-3.5Z' fill='#433B6B'></path>
					<path
						d='M14 1a6 6 0 0 0-6 6v3h2.5V7a3.5 3.5 0 1 1 7 0v3H20V7a6 6 0 0 0-6-6ZM30 9.5a4.502 4.502 0 0 1-3 4.244V22.5a1.5 1.5 0 0 1-3 0v-1.754c0-.2.078-.39.216-.52l.313-.31a.723.723 0 0 0 0-1.04.712.712 0 0 1 0-1.03.723.723 0 0 0 0-1.04l-.313-.31a.734.734 0 0 1-.216-.52v-2.232A4.502 4.502 0 0 1 25.5 5 4.5 4.5 0 0 1 30 9.5ZM25.5 8a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z'
						fill='#D3D3D3'></path>
				</svg>
			</h1>

			<header class='flex items-center justify-center gap-4 py-4 max-w-[400px] w-full'>
				<select
					id='range'
					class='block py-2.5 px-0 w-[40%] text-md text-center bg-transparent border-0 border-b-2 border-gray-200 text-gray-500 dark:border-gray-700 focus:outline-none'
					title='Longitud de la contraseña'
					required
				>
					<option selected disabled>Elegir longitud</option>
					{RANGECHARACTERS.map((range) => <option value={range}>{range}</option>)}
				</select>
				<button
					class='relative inline-flex items-center justify-center p-0.5 overflow-hidden text-sm font-medium rounded-lg group bg-gradient-to-br from-purple-600 to-blue-500 group-hover:from-purple-600 text-white'
					title='Generate password'
				>
					<span
						class='relative px-5 py-2.5 transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md group-hover:bg-opacity-0'
					>
						Generar contraseña
					</span>
				</button>
			</header>

			<footer class='flex items-center justify-center gap-3 max-w-[400px] w-full'>
				<input
					id='passwordGenerated'
					title='Contraseña generada'
					class='rounded-lg px-4 py-1.5 w-[270px] text-slate-300 text-lg text-center'
					placeholder='Contraseña generada'
					disabled
				/>
				<button
					id='clipboardPassword'
					title='Copiar contraseña en portapapeles'
					class='relative inline-flex items-center justify-center p-0.5 overflow-hidden text-sm font-medium rounded-lg group bg-gradient-to-br from-purple-600 to-blue-500 group-hover:from-purple-600 text-white'
				>
					<span
						class='relative px-5 py-2.5 transition-all ease-in duration-75 bg-gray-900 rounded-md group-hover:bg-opacity-0'
					>
						<svg
							fill='currentColor'
							width='16'
							height='16'
							viewBox='0 0 460 460'
						>
							<path
								d='M425.934 0H171.662c-18.122 0-32.864 14.743-32.864 32.864v77.134h30V32.864A2.868 2.868 0 0 1 171.662 30h254.272a2.868 2.868 0 0 1 2.864 2.864v254.272a2.868 2.868 0 0 1-2.864 2.865h-74.729v30h74.729c18.121 0 32.864-14.743 32.864-32.865V32.864C458.797 14.743 444.055 0 425.934 0z'
							></path>
							<path
								d='M288.339 139.998H34.068c-18.122 0-32.865 14.743-32.865 32.865v254.272C1.204 445.257 15.946 460 34.068 460H288.34c18.122 0 32.865-14.743 32.865-32.864V172.863c.001-18.122-14.744-32.865-32.866-32.865zM288.341 430H34.068a2.868 2.868 0 0 1-2.865-2.864V172.863a2.868 2.868 0 0 1 2.865-2.865H288.34a2.868 2.868 0 0 1 2.865 2.865v254.273h.001a2.868 2.868 0 0 1-2.865 2.864z'
							></path>
						</svg>
					</span>
				</button>
			</footer>
		</div>
	</div>
</Layout>

<script type='text/javascript'>
	const $ = (selector) => document.querySelector(selector)

	const buttonGeneratePassword = $('button')
	const InputPassword = $('#passwordGenerated')

	const NUMBERS = [...Array(10).keys()].map((n) => n.toString())
	const LOWERCASE = [...Array(26).keys()].map((n) => String.fromCharCode(n + 97))
	const UPPERCASE = [...Array(26).keys()].map((n) => String.fromCharCode(n + 65))
	const SYMBOLS = [...Array(15).keys()].map((n) => String.fromCharCode(n + 33))

	const randomNumber = (items) => Math.floor(Math.random() * items.length)

	const generatePassword = (length) => {
		const items = [...NUMBERS, ...LOWERCASE, ...UPPERCASE, ...SYMBOLS]
		const password = []

		for (let i = 0; i < length; i++) {
			password.push(items[randomNumber(items)])
		}

		return password.join('')
	}

	buttonGeneratePassword.addEventListener('click', () => {
		const rangeCharacter = $('#range').value
		const password = generatePassword(rangeCharacter)

		InputPassword.value = password
	})
</script>

<script type='module'>
	import { toast } from 'https://cdn.skypack.dev/wc-toast'
	const clipboardPassword = document.querySelector('#clipboardPassword')

	clipboardPassword.addEventListener('click', () => {
		const passwordGenerated = document.querySelector('#passwordGenerated').value

		navigator.clipboard.writeText(passwordGenerated).then(() => {
			toast('¡Contraseña copiada con éxito!', {
				icon: {
					type: 'success'
				},
				duration: 4000
			})
		})
	})
</script>
