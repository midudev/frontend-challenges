---
import Layout from '@layout'
---

<Layout title='danielcgilibert'>
	<main
		class='flex flex-col gap-5 text-black min-h-screen justify-center items-center w-72 mx-auto'
	>
		<h1 class='text-white text-2xl'>Generador de contraseñas</h1>
		<div class='bg-white w-full p-5 flex justify-center items-center gap-x-2 rounded-lg'>
			<form name='displayPasswordForm' class='w-full'>
				<input name='displayInput' value='' class='border-2 w-full pl-5 rounded-lg' disabled />
			</form>
			<button class='copyButton'>
				<svg
					width='24'
					height='24'
					viewBox='0 0 24 24'
					fill='none'
					xmlns='http://www.w3.org/2000/svg'
				>
					<path
						fill-rule='evenodd'
						clip-rule='evenodd'
						d='M2 9C2 5.13401 5.13401 2 9 2H17C17.5523 2 18 2.44772 18 3C18 3.55228 17.5523 4 17 4H9C6.23858 4 4 6.23858 4 9V17C4 17.5523 3.55228 18 3 18C2.44772 18 2 17.5523 2 17V9Z'
						fill='black'></path>
					<path
						fill-rule='evenodd'
						clip-rule='evenodd'
						d='M6 11C6 8.23858 8.23858 6 11 6H17C19.7614 6 22 8.23858 22 11V17C22 19.7614 19.7614 22 17 22H11C8.23858 22 6 19.7614 6 17V11ZM11 8C9.34315 8 8 9.34315 8 11V17C8 18.6569 9.34315 20 11 20H17C18.6569 20 20 18.6569 20 17V11C20 9.34315 18.6569 8 17 8H11Z'
						fill='black'></path>
				</svg>
			</button>
		</div>

		<div class='bg-white w-full p-5 flex flex-col gap-5 rounded-lg'>
			<header class='text-center'>Crea tu contraseña</header>
			<div>
				<form name='generatePasswordForm' class='flex flex-col gap-3'>
					<input
						disabled
						name='lengthInput'
						class='border-2 text-center rounded-lg w-full'
						value='10'
						min='10'
						max='30'
					/>
					<input type='range' name='rangeInput' min='10' max='30' value='10' />

					<div class='flex justify-around items-center'>
						<div class='flex flex-col gap-1 justify-center items-center'>
							<label>Con mayúsculas</label>
							<input type='checkbox' checked='true' name='withMayusInput' />
						</div>

						<div class='flex flex-col gap-1 justify-center items-center'>
							<label>Con números</label>
							<input type='checkbox' checked='true' name='withNumberInput' />
						</div>
					</div>

					<button class='border-2 rounded-lg mt-2 hover:bg-gray-50'>Generar</button>
				</form>
			</div>
		</div>

		<div
			class='bg-white w-full p-5 flex justify-center items-center rounded-lg transition-all duration-400 ease-linear opacity-0'
		>
			✅ Copiado!
		</div>
	</main>
</Layout>

<script type='module'>
	const letters = 'abcdefghijklmnopqrstuvwxyz'
	const lettersArray = letters.split('')

	const rangeInput = document.querySelector('input[name=rangeInput]')
	const lenghtInput = document.querySelector('input[name=lengthInput]')
	const displayPasswordInput = document.querySelector('input[name=displayInput]')
	const withNumberInput = document.querySelector('input[name=withNumberInput]')
	const withMayusInputInput = document.querySelector('input[name=withMayusInput]')
	const notificationDiv = document.querySelector('main > div:last-child')
	const copyButton = document.querySelector('.copyButton')

	const generatePasswordForm = document.forms.generatePasswordForm

	copyButton.addEventListener('click', () => {
		if (displayPasswordInput.value.length > 0) {
			navigator.clipboard.writeText(displayPasswordInput.value)
			notificationDiv.classList.add('opacity-100')
			setTimeout(() => {
				notificationDiv.classList.remove('opacity-100')
			}, 2000)
		}
	})

	generatePasswordForm.addEventListener('submit', (event) => {
		event.preventDefault()
		displayPasswordInput.value = generatePassword(
			rangeInput.value,
			withMayusInputInput.checked,
			withNumberInput.checked
		)
	})

	rangeInput.addEventListener('change', (event) => {
		lenghtInput.value = event.target.value
	})

	const generateLetter = () => {
		const ramdonNumber = Math.floor(Math.random() * 26)
		return lettersArray[ramdonNumber]
	}

	const radomNumber = () => Math.floor(Math.random() * 10)

	const generatePassword = (length, withMayus, withNumbers) => {
		const password = []

		for (let index = 0; index < length; index++) {
			let letter = generateLetter()

			if (withMayus) {
				radomNumber() % 2 === 0 && (letter = letter.toUpperCase())
			}
			if (withNumbers) {
				radomNumber() >= radomNumber() + 1 && (letter = radomNumber())
			}

			password.push(letter)
		}
		return password.join('')
	}
</script>
